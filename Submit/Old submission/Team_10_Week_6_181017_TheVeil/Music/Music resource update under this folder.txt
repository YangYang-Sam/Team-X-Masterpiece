17/10/18

Strangely productive yet not-productive. Wwise middleware has now succesfully been implemented and is now the audio engine being used within Unity.
Going forward I will be able to create more intricate sounds that react to player interaction and create a more dynamic audible landscape.

However... in doing this it means our current build is temporarily without audio, while I prepare Wwise 'logic-structures' to re-integrate audio.
I am confident however that this was a 'wise' decision and will help make audio and music in-game less repetitive and keep player engrossed. 

In addition to these notes I have moved my audio asset list to excel, as it is easier to update and keep organised (rather than have multiple new files)
Primarily this will be essential in keeping my programmer informed as to what audio is being implemented and when and in what context, now that
I will be working directly with Unity.

This implementation process was by far the most daunting prospect for this project and now that it is in place I can return to creating music and
assets. 

The next step for the game will be to re-integrate our original audio with the Wwise engine (instead of Unity) and complete SFX sounds for elements
currently present. I can also apply some randomisation effects to the audio to prevent listener's fatigue. 

I will begin composing the brunt the main musical tracks once I have a clearer sense of aesthetic and style, provided by design and 
art assets. This is important as we plan on having each plane have their own unique flavour and I want the music to reflect this. 

10/10/18

All updates to audio will be contained here to keep track of work completed and what assets are available for implementation within game or still to be 
implemented within the Unity/Wwise logic structure

Up until this point we have been implementing sound within the Unity engine - using the Wwise structure from this point to allow for more sophisticated 
application of sound.

To this date we have within the game: 

- 1. 'Music loop' to later be used as the menu screen, currently acting as placeholder for the level.
- 2. A 'Jump' and 'Jump2' sound triggered by jumping and dbl jumping (spacebar) respectively. 
- 3. A 'VeilJump' sound triggered with by pressing the 'W' key (core mechanic.)
- 4. A 'Key' noise which currently functions as a placeholder for the portal noise (later to be heard when collecting keys throughout level.)

To this date we have have sounds ready to implement:

- 1. 'CreditSequence' to be heard upon completing the game.
- 2. 'Enemynoise' x3 SFX to be triggered randomly when player's character is nearby associated enemy (to function as a form of audable warning)
     this noise will be EQ'd within Wwise to be heard muffled when player is in adjacent plane to that of the enemy.
- 3. 'GreenGoo' a bubbling/acidic noise to be heard when nearby acid hazourdous to the character (again functioning as a warning.)
- 4. A 'RotatingPlane' noise to be heard when player activates lever which rotates adjacent planes, slow and grinding, then locking in place.
- 5. 'PortalA' Sound to be triggered when activating one of the 3 portals (Sound affect ends with a musical tone, consequent portals will result in 
     different tones to be heard, ensuring variation and satisfaction as player when moving between portals quickly results in a musical progression.)
- 6. 'TxtSpeech' blips to be heard as text arrives on-screen (possibly not in final build?)

Sound/Music still to be designed/composed:

- 1. 3 Seperate music loops 45seconds-1minute each (roughly:) They will each trigger when in any one of the 3 planes. Moving between planes will trigger
     the current track to end and the other to begin.
- 2. 6 very-short transition pieces of music to help soften the move between each loop and remain musically satisfying (not-jarring.) This 
     interaction/implementation will be one of the core audio-game mechanics which ensure satisfying gameplay.
- 3. Various audio to accompany key enemy animations eg. Skeleton throwing a 'rib-boomerang.'
- 4. Sounds to be triggered upon 'Raven's' death or the successful completion of the level.

As the game progresses and evolves further sounds will be designed to accompany new mechanics/assets etc, current lists discuss largely audio
deemed highest priority.
The next step is to implement Wwise within Unity and begin creating the logic structures for when sounds will be triggered and how they might 
evolve over time/react to player's actions within the game. This will make further changes/additions to audio within the game easier and more impactful.
 